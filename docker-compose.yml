version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: antystics-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-antystics}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: antystics-backend
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=${POSTGRES_DB:-antystics};Username=${POSTGRES_USER:-postgres};Password=${POSTGRES_PASSWORD:-postgres}
      - Jwt__Secret=${JWT_SECRET:-your-super-secret-key-change-this-in-production-min-32-chars-long}
      - Jwt__Issuer=${JWT_ISSUER:-Antystics}
      - Jwt__Audience=${JWT_AUDIENCE:-AntysticsUsers}
      - Email__SmtpHost=${SMTP_HOST:-smtp.gmail.com}
      - Email__SmtpPort=${SMTP_PORT:-587}
      - Email__SmtpUser=${SMTP_USER}
      - Email__SmtpPassword=${SMTP_PASSWORD}
      - Email__FromAddress=${EMAIL_FROM_ADDRESS:-noreply@antystyki.pl}
      - Email__FromName=${EMAIL_FROM_NAME:-Antystyki}
      - FrontendUrl=${FRONTEND_URL:-http://localhost:3000}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:5173,http://localhost:3000}
    ports:
      - "5000:8080"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend/uploads:/app/wwwroot/uploads

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: antystics-frontend
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:5000/api}
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  postgres_data:



