version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: antystics-db
    environment:
      POSTGRES_DB: antystics
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: antystics-backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=antystics;Username=postgres;Password=postgres
      - Jwt__Secret=your-super-secret-key-change-this-in-production-min-32-chars-long
      - Jwt__Issuer=Antystics
      - Jwt__Audience=AntysticsUsers
    ports:
      - "5000:8080"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend/uploads:/app/wwwroot/uploads

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: antystics-frontend
    environment:
      - VITE_API_URL=http://localhost:5000/api
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  postgres_data:



