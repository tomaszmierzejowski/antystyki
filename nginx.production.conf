# ============================================================================
# Nginx Configuration for Antystyki Production
# ============================================================================
# This configuration serves the unified Antystyki application (React + .NET)
# through a reverse proxy with SSL termination.
# ============================================================================

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=upload_limit:10m rate=2r/s;

# Cache paths
proxy_cache_path /var/cache/nginx/antystyki levels=1:2 keys_zone=antystyki_cache:10m max_size=100m inactive=60m use_temp_path=off;

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name antystyki.pl www.antystyki.pl;

    # Allow Certbot for SSL certificate verification
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main HTTPS Server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name antystyki.pl www.antystyki.pl;

    # SSL Configuration (managed by Certbot)
    ssl_certificate /etc/letsencrypt/live/antystyki.pl/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/antystyki.pl/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/antystyki.pl/chain.pem;

    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Logging
    access_log /var/log/nginx/antystyki_access.log;
    error_log /var/log/nginx/antystyki_error.log warn;

    # Max body size for image uploads
    client_max_body_size 10M;
    client_body_buffer_size 128k;

    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # ========================================================================
    # API Endpoints - Proxy to ASP.NET Backend
    # ========================================================================
    location /api {
        # Rate limiting
        limit_req zone=api_limit burst=20 nodelay;

        # Proxy settings
        proxy_pass http://127.0.0.1:5000;
        proxy_http_version 1.1;
        
        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # WebSocket support (if needed)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Disable buffering for real-time responses
        proxy_buffering off;
        
        # Add CORS headers for API (if not handled by backend)
        # add_header Access-Control-Allow-Origin "https://antystyki.pl" always;
    }

    # ========================================================================
    # Health Check Endpoint
    # ========================================================================
    location /health {
        proxy_pass http://127.0.0.1:5000/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        access_log off;  # Don't log health checks
    }

    # ========================================================================
    # Uploaded Images/Files - Serve directly from backend
    # ========================================================================
    location /uploads {
        # Rate limiting for uploads
        limit_req zone=upload_limit burst=5 nodelay;
        
        proxy_pass http://127.0.0.1:5000/uploads;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        
        # Cache uploaded images
        proxy_cache antystyki_cache;
        proxy_cache_valid 200 30d;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        
        # Cache control headers
        add_header Cache-Control "public, max-age=2592000, immutable";
        add_header X-Cache-Status $upstream_cache_status;
        
        # Security headers
        add_header X-Content-Type-Options "nosniff" always;
    }

    # ========================================================================
    # Frontend (React SPA) - Serve from backend's wwwroot
    # ========================================================================
    location / {
        proxy_pass http://127.0.0.1:5000;
        proxy_http_version 1.1;
        
        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://127.0.0.1:5000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            
            # Cache static files
            proxy_cache antystyki_cache;
            proxy_cache_valid 200 7d;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            
            add_header Cache-Control "public, max-age=604800, immutable";
            add_header X-Cache-Status $upstream_cache_status;
        }
        
        # SPA fallback - all routes go to index.html
        # This is handled by ASP.NET Core's fallback routing
    }

    # ========================================================================
    # Security: Block access to sensitive files
    # ========================================================================
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ ^/(\.env|\.git|\.github|docker-compose|Dockerfile) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # ========================================================================
    # Custom Error Pages
    # ========================================================================
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}

# ============================================================================
# Additional Configuration Notes
# ============================================================================
# 
# 1. SSL certificates are managed by Certbot (Let's Encrypt)
#    Run: sudo certbot --nginx -d antystyki.pl -d www.antystyki.pl
#
# 2. Test configuration: sudo nginx -t
#
# 3. Reload: sudo systemctl reload nginx
#
# 4. Monitor logs:
#    - Access: tail -f /var/log/nginx/antystyki_access.log
#    - Errors: tail -f /var/log/nginx/antystyki_error.log
#
# 5. Rate limiting zones can be adjusted based on traffic patterns
#
# 6. Cache directory must be created: sudo mkdir -p /var/cache/nginx/antystyki
#
# ============================================================================

